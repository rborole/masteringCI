<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.cg.demo.test.AccountServiceTest" tests="8" skipped="0" failures="1" errors="0" timestamp="2016-05-20T08:43:23" hostname="DIN56001193B" time="0.336">
  <properties/>
  <testcase name="ifAmountPassedToDepositIsNegativeThenItShouldThrowException" classname="com.cg.demo.test.AccountServiceTest" time="0.274">
    <failure message="java.lang.AssertionError: Expected exception: com.cg.demo.exceptions.InvalidInitialAmountException" type="java.lang.AssertionError">java.lang.AssertionError: Expected exception: com.cg.demo.exceptions.InvalidInitialAmountException
	at org.junit.internal.runners.MethodRoadie.runTestMethod(MethodRoadie.java:100)
	at org.junit.internal.runners.MethodRoadie$2.run(MethodRoadie.java:79)
	at org.junit.internal.runners.MethodRoadie.runBeforesThenTestThenAfters(MethodRoadie.java:87)
	at org.junit.internal.runners.MethodRoadie.runTest(MethodRoadie.java:77)
	at org.junit.internal.runners.MethodRoadie.run(MethodRoadie.java:42)
	at org.junit.internal.runners.JUnit4ClassRunner.invokeTestMethod(JUnit4ClassRunner.java:88)
	at org.junit.internal.runners.JUnit4ClassRunner.runMethods(JUnit4ClassRunner.java:51)
	at org.junit.internal.runners.JUnit4ClassRunner$1.run(JUnit4ClassRunner.java:44)
	at org.junit.internal.runners.ClassRoadie.runUnprotected(ClassRoadie.java:27)
	at org.junit.internal.runners.ClassRoadie.runProtected(ClassRoadie.java:37)
	at org.junit.internal.runners.JUnit4ClassRunner.run(JUnit4ClassRunner.java:42)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.runTestClass(JUnitTestClassExecuter.java:112)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.execute(JUnitTestClassExecuter.java:56)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassProcessor.processTestClass(JUnitTestClassProcessor.java:66)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.messaging.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32)
	at org.gradle.messaging.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93)
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:109)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.messaging.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:364)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:54)
	at org.gradle.internal.concurrent.StoppableExecutorImpl$1.run(StoppableExecutorImpl.java:40)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
</failure>
  </testcase>
  <testcase name="depositShouldThrowInvalidAccountNumberIfAccountNumberIsNotValid" classname="com.cg.demo.test.AccountServiceTest" time="0.062"/>
  <testcase name="whenAmountAndAccountNumberAreValidWithdrawShouldDeductTheBalance" classname="com.cg.demo.test.AccountServiceTest" time="0.0"/>
  <testcase name="withdrawShouldThrowInvalidAccountNumberIfAccountNumberIsNotValid" classname="com.cg.demo.test.AccountServiceTest" time="0.0"/>
  <testcase name="ifAmountPassedToWithdrawIsNegativeThenItShouldThrowException" classname="com.cg.demo.test.AccountServiceTest" time="0.0"/>
  <testcase name="test_valid_account_number" classname="com.cg.demo.test.AccountServiceTest" time="0.0"/>
  <testcase name="ifAmountPassedIsGreaterThanBalanceThenWithdrawShouldThrowException" classname="com.cg.demo.test.AccountServiceTest" time="0.0"/>
  <testcase name="test_showbalance" classname="com.cg.demo.test.AccountServiceTest" time="0.0"/>
  <system-out><![CDATA[]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
